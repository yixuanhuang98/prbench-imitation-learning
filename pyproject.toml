[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "prbench_imitation_learning"
version = "0.1.0"
description = "Imitation learning baselines for PRBench."
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    # Core ML/AI libraries
    "torch>=2.0.0",
    "numpy",
    
    # Diffusion and ML libraries
    "diffusers",
    
    # Data handling
    "datasets",
    
    # Robotics and environments
    "gymnasium",
    "prbench@git+https://github.com/Princeton-Robot-Planning-and-Learning/prbench.git",
    
    # LeRobot for datasets
    "lerobot",
    
    # Visualization and plotting
    "matplotlib",
    
    # Experiment tracking
    "wandb",
    
    # Utilities
    "tqdm",
]

[project.optional-dependencies]
develop = [
    "black",
    "docformatter",
    "isort",
    "mypy",
    "pylint>=2.14.5",
    "pytest-pylint>=0.18.0",
    "pytest>=7.2.2",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
prbench_imitation_learning = ["py.typed"]

[tool.black]
line-length = 88
target-version = ["py310"]

[tool.isort]
py_version = 310
profile = "black"
multi_line_output = 2
skip_glob = ["venv/*", ".venv/*", "third-party/*"]
split_on_trailing_comma = true

[tool.docformatter]
line-length = 88
wrap-summaries = 88
wrap-descriptions = 88

[tool.mypy]
strict_equality = true
disallow_untyped_calls = true
warn_unreachable = true
exclude = ["venv/*", ".venv/*", "third-party/*"]

[[tool.mypy.overrides]]
module = [
    "matplotlib.*",
    "torch.*",
    "diffusers.*",
    "datasets.*",
    "gymnasium.*",
    "prbench.*",
    "lerobot.*",
    "wandb.*",
    "tqdm.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = ["--ignore=third-party"]
